StartLog(LogFile="results/test-AwsS3-ListObjects-Single.tstool.log")
# Test listing single objects:
# - use the test.openwaterfoundation.org bucket
# - use the bucket folder tstool-aws-plugin/test/commands/AwsS3/test-AwsS3-ListObjects-Single
#
# Configuration data.
SetProperty(PropertyName="TestS3Folder",PropertyType=String,PropertyValue="tstool-aws-plugin/test/commands/AwsS3/test-AwsS3-ListObjects-Single")
#
# Delete the bucket files first:
# - list the folder to make sure the files were deleted before uploading and copying
AwsS3(S3Command="DeleteObjects",Bucket="test.openwaterfoundation.org",DeleteFolders="${TestS3Folder}/",DeleteFoldersScope="AllFilesAndFolders")
AwsS3(S3Command="ListObjects",Bucket="test.openwaterfoundation.org",ListObjectsScope=All,Prefix="${TestS3Folder}/",ListObjectsCountProperty="TestSetupListCount",OutputTableID="TestSetupList")
If(Name="IfDeleteCheck",Condition="${TestSetupListCount} != 0")
Message(Message="The copy test files were not deleted for setup.  Expecting 0 but have ${TestSetupListCount} remaining.",CommandStatus=FAILURE)
EndIf(Name="IfDeleteCheck")
#
# Upload the files for the test that will be the source of the copy:
# - list two specific files
AwsS3(S3Command="UploadObjects",Region="us-west-2",Bucket="test.openwaterfoundation.org",UploadFolders="data/testfolder2:${TestS3Folder}/testfolder2/",UploadFiles="data/root-testfile1.txt:${TestS3Folder}/*,data/root-testfile2.txt:${TestS3Folder}/*,data/testfolder1/testfolder1-testfile1.txt:${TestS3Folder}/testfolder1/*,data/testfolder1/testfolder1-testfile2.txt:${TestS3Folder}/testfolder1/*",OutputTableID="BucketList")
# SetDebugLevel(LogFileLevel=1)
AwsS3(S3Command="ListObjects",Bucket="test.openwaterfoundation.org",ListObjectsScope=All,Prefix="${TestS3Folder}/root-testfile1.txt",ListObjectsCountProperty="TestUploadListCount",OutputTableID="TestUploadList")
AwsS3(S3Command="ListObjects",Bucket="test.openwaterfoundation.org",ListObjectsScope=All,Prefix="${TestS3Folder}/testfolder1/testfolder1-testfile1.txt",ListObjectsCountProperty="TestUploadListCount",OutputTableID="TestUploadList",AppendOutput="True")
# SetDebugLevel(ScreenLevel=0,LogFileLevel=0)
If(Name="IfTestUploadListCount",Condition="${TestUploadListCount} != 2")
Message(Message="Error - should be 2 if the objects are correctly uploaded (have ${TestUploadListCount}).",CommandStatus=FAILURE)
EndIf(Name="IfTestUploadListCount")
